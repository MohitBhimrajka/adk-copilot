Directory structure:
└── financial-advisor/
    ├── README.md
    ├── pyproject.toml
    ├── .env.example
    ├── deployment/
    │   ├── deploy.py
    │   └── test_deployment.py
    ├── eval/
    │   ├── test_eval.py
    │   └── data/
    │       └── financial-advisor.test.json
    ├── financial_advisor/
    │   ├── __init__.py
    │   ├── agent.py
    │   ├── prompt.py
    │   └── sub_agents/
    │       ├── data_analyst/
    │       │   ├── __init__.py
    │       │   ├── agent.py
    │       │   └── prompt.py
    │       ├── execution_analyst/
    │       │   ├── __init__.py
    │       │   ├── agent.py
    │       │   └── prompt.py
    │       ├── risk_analyst/
    │       │   ├── __init__.py
    │       │   ├── agent.py
    │       │   └── prompt.py
    │       └── trading_analyst/
    │           ├── __init__.py
    │           ├── agent.py
    │           └── prompt.py
    └── tests/
        └── test_agents.py

================================================
File: README.md
================================================
# Financial Advisor


## Overview

The Financial Advisor is a team of specialized AI agents that assists human financial advisors.

1. Data Analyst Agent: This agent is responsible for creating in-depth and current market analysis reports for specific stock tickers. It achieves this by repeatedly using Google Search to find a predetermined amount of unique, recent (within a given timeframe), and insightful information. The agent focuses on gathering both SEC filings and broader market intelligence via Google Search tool, which it then uses to compile a structured report based solely on the collected data.

2. Trading Analyst Agent: This agent's task is to develop and describe at least five different trading strategies. It does this by carefully reviewing the comprehensive market analysis provided by the Data Analyst Agent. Each proposed strategy must be customized to match the user's declared risk tolerance and intended investment duration.

3. Execution Agent: This agent creates a thorough and well-justified plan for implementing a given trading strategy. The plan must be carefully adjusted to fit the user's risk tolerance, investment timeframe, and preferred methods of execution. The output will be detailed and fact-based, examining the best approaches and specific timing for initiating, maintaining, adding to, partially selling, and completely exiting investment positions.

4. Risk Evaluation Agent: This agent's role is to produce a detailed and reasoned analysis of the risks associated with a specific trading strategy and its execution plan. This analysis needs to be precisely aligned with the user's stated risk tolerance, investment period, and execution preferences. The output will be rich in factual analysis, clearly outlining all identified risks and suggesting concrete, actionable steps to lessen their impact.

**Legal Disclaimer and User Acknowledgment**

Important Disclaimer: For Educational and Informational Purposes Only.

The information and trading strategy outlines provided by this tool, including any analysis, commentary, or potential scenarios, are generated by an AI model and are for educational and informational purposes only. They do not constitute, and should not be interpreted as, financial advice, investment recommendations, endorsements, or offers to buy or sell any securities or other financial instruments.

Google and its affiliates make no representations or warranties of any kind, express or implied, about the completeness, accuracy, reliability, suitability, or availability with respect to the information provided. Any reliance you place on such information is therefore strictly at your own risk.

This is not an offer to buy or sell any security. Investment decisions should not be made based solely on the information provided here. Financial markets are subject to risks, and past performance is not indicative of future results. You should conduct your own thorough research and consult with a qualified independent financial advisor before making any investment decisions.

By using this tool and reviewing these strategies, you acknowledge that you understand this disclaimer and agree that Google and its affiliates are not liable for any losses or damages arising from your use of or reliance on this information.

## Agent Details

The key features of the Financial Advisor include:

| Feature | Description |
| --- | --- |
| **Interaction Type** | Conversational |
| **Complexity**  | Medium |
| **Agent Type**  | Multi Agent |
| **Components**  | Tools: built-in Google Search |
| **Vertical**  | Financial |


### Agent architecture:

This diagram shows the detailed architecture of the agents and tools used
to implement this workflow.
<img src="financial-advisor.png" alt="Financial Advisor" width="800"/>

## Setup and Installation

1.  **Prerequisites**

    *   Python 3.11+
    *   Poetry
        *   For dependency management and packaging. Please follow the
            instructions on the official
            [Poetry website](https://python-poetry.org/docs/) for installation.

        ```bash
        pip install poetry
        ```

    * A project on Google Cloud Platform
    * Google Cloud CLI
        *   For installation, please follow the instruction on the official
            [Google Cloud website](https://cloud.google.com/sdk/docs/install).

2.  **Installation**

    ```bash
    # Clone this repository.
    git clone https://github.com/google/adk-samples.git
    cd adk-samples/python/agents/financial_advisor
    # Install the package and dependencies.
    poetry install
    ```

3.  **Configuration**

    *   Set up Google Cloud credentials.

        *   You may set the following environment variables in your shell, or in
            a `.env` file instead.

        ```bash
        export GOOGLE_GENAI_USE_VERTEXAI=true
        export GOOGLE_CLOUD_PROJECT=<your-project-id>
        export GOOGLE_CLOUD_LOCATION=<your-project-location>
        export GOOGLE_CLOUD_STORAGE_BUCKET=<your-storage-bucket>  # Only required for deployment on Agent Engine
        ```

    *   Authenticate your GCloud account.

        ```bash
        gcloud auth application-default login
        gcloud auth application-default set-quota-project $GOOGLE_CLOUD_PROJECT
        ```

## Running the Agent

**Using `adk`**

ADK provides convenient ways to bring up agents locally and interact with them.
You may talk to the agent using the CLI:

```bash
adk run financial_advisor
```

Or on a web interface:

```bash
 adk web
```

The command `adk web` will start a web server on your machine and print the URL.
You may open the URL, select "financial_advisor" in the top-left drop-down menu, and
a chatbot interface will appear on the right. The conversation is initially
blank. Here are some example requests you may ask the Financial Advisor to verify:

```
who are you
```

Sampled responses of these requrests are shown below in the [Example
Interaction](#example-interaction) section.

```
I am the financial coordinator agent. My role is to guide you through a structured process to receive financial advice. I work with specialized subagents to help you:

Analyze a market ticker.
Develop trading strategies based on your risk profile and investment goals.
Define an optimal plan for executing those strategies.
Evaluate the overall risk of the proposed plan.
How can I help you start this process today? For example, we could begin by analyzing a market ticker.

```

### Example Interaction

Below is an example interaction with the Financial Advisor. Note that the exact output
of the agent may be different every time.

```

User: who are you

I am the financial coordinator agent. My role is to guide you through a structured process to receive financial advice. I work with specialized subagents to help you:

Analyze a market ticker.
Develop trading strategies based on your risk profile and investment goals.
Define an optimal plan for executing those strategies.
Evaluate the overall risk of the proposed plan.
How can I help you start this process today? For example, we could begin by analyzing a market ticker.

User: APPL

It looks like there might be a typo in the ticker symbol. Did you mean "AAPL" for Apple Inc.?

Once you confirm the correct ticker symbol, I will start the first step by calling the data_analyst subagent to gather comprehensive market data analysis for it.

User: correct

Okay, great. I will now call the data_analyst subagent to gather comprehensive market data analysis for the ticker symbol AAPL (Apple Inc.).

This analysis will include information like historical performance, key financial ratios, and relevant news sentiment, forming the foundation for our next steps.

Okay, the data_analyst subagent has outlined its plan to gather comprehensive market data for AAPL (Apple Inc.). It will look into recent SEC filings, financial news, stock performance, market sentiment, analyst opinions, risks, opportunities, and major events from the past 7 days.

(Note: While the tool output showed the agent's plan, for the purpose of this process, we will assume it has successfully executed this plan and returned a detailed market analysis. This analysis, covering recent performance, news, sentiment, and risks for AAPL, is now conceptually stored in our state key market_data_analysis_output).

This market analysis provides the context we need for the next step.

Step 2: Develop Trading Strategies

Now, I need to call the trading_analyst subagent. This agent will use the market analysis for AAPL (market_data_analysis_output) along with your personal investment preferences to suggest potential trading strategies.

To help the trading_analyst tailor the strategies, please tell me:

What is your Risk Attitude? (e.g., conservative, moderate, aggressive)
What is your Investment Period? (e.g., short-term, medium-term, long-term)

User: risk moderate , and investment long period

Great, thank you for providing that information. Your risk attitude is moderate, and your investment period is long-term.

I will now call the trading_analyst subagent. It will use the previously gathered market analysis for AAPL (stored in market_data_analysis_output) along with your moderate risk profile and long-term investment horizon to develop suitable trading strategies.

Okay, the trading_analyst subagent has analyzed the market data for AAPL in the context of your moderate risk attitude and long-term investment period. Based on this, it has proposed five potential trading strategies for your consideration:

Core Long-Term Buy & Hold with Compounding: This strategy involves buying AAPL shares and holding them for the long term, benefiting from potential price appreciation and reinvesting dividends. It suits investors who believe in the company's fundamental strength.
Dividend Growth Focus with Reinvestment (DRIP): Similar to the first, but with a stronger emphasis on AAPL's dividends. You would reinvest dividends automatically or manually to increase your share count over time, leveraging compounding.
Long-Term Value Averaging on Significant Dips: This strategy involves systematically buying AAPL shares during significant price drops (e.g., market corrections or pullbacks to technical levels) to potentially lower your average purchase price over time. Requires patience and available capital.
Covered Call Writing for Income Generation: If you hold at least 100 shares, you could sell call options against your shares to generate income (premium). This can enhance returns in flat or slightly rising markets but caps upside potential and requires more active management.
Growth at a Reasonable Price (GARP) Accumulation: This approach involves buying AAPL shares when its valuation (e.g., P/E ratio) seems reasonable compared to its growth prospects and historical levels, rather than buying at any price.
Each outline details the rationale, alignment with your profile, key indicators to watch, potential entry/exit conditions, and specific risks.

(Please note the important disclaimer provided by the agent: This information is for educational purposes only and is not financial advice. Always conduct your own research and consult a qualified financial advisor before making investment decisions.)

These proposed strategies have now been conceptually stored in the state key proposed_trading_strategies_output.

Step 3: Define Optimal Execution Strategy

Next, we need to refine how one might implement these strategies. I will call the execution_analyst subagent to develop a detailed execution plan. This plan considers factors like order types, timing, and potential costs, aligning with the strategies, your risk profile, and the market analysis.

The execution_analyst will use:

The proposed trading strategies (proposed_trading_strategies_output).
Your risk attitude (Moderate).
Your investment period (Long-term).
Before I call the agent, do you have any specific preferences regarding execution? For example:

Do you have a preferred broker?
Are there specific order types you prefer or want to avoid (e.g., market orders, limit orders)?
Any other constraints or preferences for how trades are placed?
If you don't have specific preferences, the agent will suggest generally suitable approaches.

User: show me the detailed trading strategy as markdown

Okay, you'd like to see the proposed trading strategies presented in a detailed markdown format. Here they are, based on the output from the trading_analyst subagent:

Potential Trading Strategy Outlines for AAPL (Moderate Risk, Long-Term Horizon)
Here are five potential trading strategy outlines developed based on the market analysis for AAPL and your stated preferences:

Strategy 1: Core Long-Term Buy & Hold with Compounding
Description & Rationale: This strategy focuses on AAPL's historical resilience, strong financials, brand power, and ecosystem lock-in. The core idea is to establish a long-term position and hold it, benefiting from potential capital appreciation and compounding dividends over time. It leverages the analysis pointing to strong fundamentals and market position, viewing pullbacks as potential accumulation opportunities rather than reasons to sell.
Alignment with User Profile: Suitable for a 'Moderate' risk profile due to AAPL's large-cap stability relative to smaller companies, and directly aligns with the 'Long-term' investment period (3+ years), focusing on secular growth and company fundamentals over short-term noise.
Key Market Indicators to Watch:
Long-term revenue and earnings growth trends (especially in Services)
Free cash flow generation
Dividend growth rate
Market share stability
Major product cycle reception
Potential Entry Conditions:
Establish an initial position at current levels or during market pullbacks.
Consider dollar-cost averaging (DCA) - investing a fixed amount regularly regardless of price - to smooth out entry points over time.
Potential Exit Conditions or Targets: Primarily driven by a fundamental change in the company's long-term outlook (e.g., sustained loss of market share, failure to innovate, major disruption to business model) rather than price targets. Re-evaluate portfolio allocation periodically (e.g., annually).
Primary Risks Specific to this Strategy:
Underperformance risk if growth slows more than expected.
Concentration risk (if AAPL becomes too large a part of the portfolio).
Major regulatory impacts.
Unforeseen technological disruption.

Strategy 2: Dividend Growth Focus with Reinvestment (DRIP)
Description & Rationale: This strategy emphasizes AAPL's history of increasing dividends and its strong cash flow generation. The goal is to build a position and automatically reinvest dividends received back into buying more AAPL shares (using a DRIP plan if available, or manually), accelerating the compounding effect over the long term.
Alignment with User Profile: Aligns well with a 'Moderate' risk tolerance, as it focuses on a more conservative return component (dividends) alongside capital appreciation potential. Perfectly suited for a 'Long-term' horizon where compounding has the most significant impact.
Key Market Indicators to Watch:
Dividend payout ratio (sustainability)
Dividend growth rate
Free cash flow covering dividends
Company announcements regarding dividend policy and share buybacks
Potential Entry Conditions:
Establish an initial position and enable dividend reinvestment.
Accumulate shares over time, particularly when the dividend yield might be relatively higher (often when the stock price dips).
Potential Exit Conditions or Targets: Exit primarily considered if the company signals a negative change in dividend policy (e.g., a cut or freeze without strong justification), or if fundamental deterioration threatens future dividend capacity.
Primary Risks Specific to this Strategy:
Risk of slowing dividend growth.
Potential for dividend cuts in a severe downturn (though less likely for AAPL historically).
Reinvestment at potentially unfavorable prices if stock is overvalued when dividends are paid.

Strategy 3: Long-Term Value Averaging on Significant Dips
Description & Rationale: Acknowledging AAPL's potential for volatility despite its size, this strategy involves setting aside capital to specifically buy shares during significant price corrections (e.g., drops of 10-15%+, or pullbacks to major technical support levels). The aim is to lower the average cost basis over time compared to regular DCA.
Alignment with User Profile: Fits a 'Moderate' risk profile by being systematic but opportunistic. Requires patience and fits the 'Long-term' view, assuming dips are temporary within a longer uptrend. Requires discipline not to panic sell during dips.
Key Market Indicators to Watch:
Price relative to key moving averages (e.g., 100-day, 200-day MA)
Relative Strength Index (RSI) indicating oversold conditions (e.g., below 30)
Major support levels identified in technical analysis
News flow context causing the dip (fundamental vs. temporary)
Potential Entry Conditions: Consider entries when the price pulls back significantly to pre-defined technical levels (e.g., 200-day MA) OR after a notable percentage drop from recent highs, provided the long-term fundamental story remains intact.
Potential Exit Conditions or Targets: Similar to Strategy 1 – exit driven by fundamental shifts in the long-term thesis, not short-term price targets. Periodic rebalancing may still be appropriate.
Primary Risks Specific to this Strategy:
Risk of "catching a falling knife" if a dip turns into a prolonged downturn due to fundamental issues.
Opportunity cost if significant dips don't occur for long periods.
Requires available cash to deploy during dips.

Strategy 4: Covered Call Writing for Income Generation
Description & Rationale: For investors holding at least 100 shares of AAPL, this strategy involves selling call options against the long stock position to generate income (premium). It leverages analysis points about moderate volatility and high liquidity in AAPL options. The goal is to enhance returns in flat or slowly rising markets, providing some downside cushion from the premium received.
Alignment with User Profile: Can fit a 'Moderate' profile if implemented conservatively (e.g., selling out-of-the-money calls). It can be managed within a 'Long-term' holding strategy but requires more active management. It caps upside potential above the strike price.
Key Market Indicators to Watch:
Implied Volatility (IV) of options (higher IV means higher premiums)
Stock price relative to potential strike prices
Time to expiration
Upcoming events (earnings, product launches) that could increase volatility
Potential Entry Conditions:
Requires holding AAPL shares (min 100 per contract).
Sell call options (e.g., 30-45 days to expiration) at a strike price above the current market price where you'd be comfortable selling shares or expect resistance.
Potential Exit Conditions or Targets: Options expire worthless (profit = premium), option is bought back, or shares are called away if the stock price exceeds the strike price at expiration. Strategy is typically rolled forward. Exit the underlying stock based on long-term thesis changes.
Primary Risks Specific to this Strategy:
Capped upside potential if AAPL price surges above the call strike price.
Risk of shares being called away (possible taxable event).
Requires active management and understanding of options.

Strategy 5: Growth at a Reasonable Price (GARP) Accumulation
Description & Rationale: This strategy blends growth potential with valuation awareness. It uses the analysis regarding AAPL's premium valuation but also its growth drivers. The approach is to accumulate shares primarily when valuation metrics (like P/E ratio, PEG ratio) pull back towards historical averages or become more favorable relative to expected growth.
Alignment with User Profile: Fits a 'Moderate' risk profile by adding valuation discipline. Suitable for 'Long-term' horizon, focusing on acquiring shares at prices deemed more sustainable based on fundamentals and growth prospects.
Key Market Indicators to Watch:
P/E Ratio (compared to historical range and peers)
Price/Sales Ratio
PEG Ratio (P/E divided by expected growth rate)
Analyst consensus earnings estimates
Revenue growth rates (overall and by segment)
Potential Entry Conditions: Consider accumulating shares when valuation metrics fall below certain thresholds (e.g., P/E below its 5-year average) OR when forward-looking metrics suggest reasonable value relative to projected growth, especially during broader market corrections.
Potential Exit Conditions or Targets: Exit driven by fundamental thesis change or if valuation becomes persistently excessive without supporting growth. Periodic rebalancing is key.
Primary Risks Specific to this Strategy:
Difficulty in accurately determining "reasonable" valuation.
Potential to miss gains if the stock continues rising despite elevated valuation metrics.
Requires ongoing monitoring of both fundamentals and valuation.
Important Disclaimer: For Educational and Informational Purposes Only.

The information and trading strategy outlines provided here are generated by an AI model and are for educational and informational purposes only. They do not constitute financial advice, investment recommendations, endorsements, or offers to buy or sell any securities. Google and its affiliates make no representations or warranties regarding the accuracy or completeness of this information. Any reliance you place on it is strictly at your own risk. Financial markets involve risks, and past performance is not indicative of future results. Always conduct your own thorough research and consult with a qualified independent financial advisor before making any investment decisions.

Now that you have reviewed these strategies in detail, shall we proceed to Step 3: Define Optimal Execution Strategy?

As a reminder, I will call the execution_analyst subagent. To help tailor the execution plan, please let me know if you have any preferences regarding:

Preferred broker?
Preferred order types (e.g., market, limit)?
Any other execution constraints?
If not, the agent will propose generally suitable approaches based on the strategies and your profile.

User: no particular preference
User: proceed

Okay, understood. You have no specific execution preferences.

I will now call the execution_analyst subagent. This agent will take the five proposed trading strategies for AAPL (conceptually stored in proposed_trading_strategies_output), your moderate risk attitude, and your long-term investment period to create a detailed execution plan.

Since you haven't specified preferences, the agent will suggest generally suitable methods for order types, timing, and cost considerations for each strategy type.

Okay, understood. You have no particular preferences regarding execution.

I will now call the execution_analyst subagent. This agent will formulate a detailed execution plan tailored to the proposed trading strategies for AAPL, your moderate risk attitude, and long-term investment horizon, using generally suitable methods since no specific preferences were given.

The agent will consider aspects like appropriate order types, potential timing considerations, and cost management (like minimizing commissions and slippage) for strategies like Buy & Hold, DRIP, Value Averaging, Covered Calls, and GARP.

Okay, the execution_analyst subagent has provided a detailed plan for executing the proposed trading strategies for AAPL, considering your moderate risk profile, long-term horizon, and lack of specific preferences. Here is the execution plan presented in markdown format:

Execution Plan Analysis for AAPL Trading Strategies (Moderate Risk, Long-Term Horizon)
This plan outlines execution methods focused on cost-effectiveness, risk management, and capturing long-term trends, suitable for the proposed strategies and your profile.

I. Foundational Execution Philosophy

Goal: Capture significant trends in AAPL over months/years while managing risk prudently. Prioritize strategic positioning over rapid trading.
Risk Management: Accept normal market volatility but use defined stop-losses for capital preservation. Avoid excessive leverage.
Cost Control: Minimize commissions and slippage using patient order placement (Limit Orders) and lower trading frequency.
Timeframe Focus: Primarily use Daily and Weekly charts for signals and management to filter out short-term noise.
II. Entry Execution Strategy

Optimal Entry Conditions:
Trend Following: Enter on confirmed breaks above significant long-term resistance or sustained trading above key rising moving averages (e.g., 50-week MA), often confirmed by weekly closes.
Strategic Accumulation: Enter during pullbacks to major support zones (e.g., 200-day MA, prior highs) only if the primary long-term uptrend remains valid. Look for stabilization signs.
Timing Considerations: Be patient; wait for signal confirmation (e.g., end-of-week closes). Avoid entering just before major known events (e.g., earnings) unless the strategy accounts for it.
Recommended Order Type: Limit Orders. Prioritize achieving a specific price or better over immediate execution.
Breakout Entry: Place limit slightly above the breakout level after confirmation.
Dip Accumulation: Place limit at or slightly above the support level. Consider scaling in with multiple limits.
Initial Position Sizing: Fixed Fractional Risk. Risk a fixed percentage of total capital per trade (e.g., 1% - 2.5% for Moderate risk).
Calculation: Position Size = (Total Capital * Risk %) / (Entry Price - Initial Stop-Loss Price)
Initial Stop-Loss Strategy: Chart-Based (Structural) Stops + Volatility Buffer (ATR).
Place stop below a level that invalidates the entry reason (e.g., below recent swing low for breakout, below support zone for dip buy).
Add a buffer based on Average True Range (e.g., 1.5-2.5x ATR) to avoid premature stop-outs due to normal volatility.
III. Holding & In-Trade Management Strategy

Monitoring: Primarily passive holding with periodic review (e.g., weekly chart analysis). Daily checks only if approaching critical levels.
Dynamic Risk Management (Stop-Loss Adjustments):
Trailing Stops: Recommended once substantially profitable. Trail below new higher lows, key moving averages, or using an ATR-based method to protect profits while allowing room for the trend.
Move to Breakeven: Consider moving stop to entry price after achieving a predefined profit (e.g., 1x initial risk) to eliminate initial risk.
Handling Volatility: Expect drawdowns. Adhere strictly to the stop-loss. Avoid emotional reactions to short-term swings. Re-evaluate only if stop is hit or major fundamental news breaks.
IV. Accumulation (Scaling-In) Strategy (If applicable)

Conditions: Only add to a position if: 1) Initial position is profitable, 2) Primary trend is strong, 3) A constructive pullback to higher support occurs.
Execution: Use Limit Orders at pullback support. Subsequent entries should typically be smaller than the initial size (e.g., 50-75%) to manage average cost and risk.
Risk Adjustment: Recalculate average entry price and adjust the stop-loss for the entire position, ensuring total dollar risk remains within portfolio limits.
V. Partial Sell (Profit-Taking / Scaling-Out) Strategy

Triggers: Consider taking partial profits when:
Reaching predefined resistance/targets.
Achieving specific risk/reward milestones (e.g., 2:1, 3:1).
Observing signs of significant trend weakening (e.g., bearish divergences).
Position size grows too large (rebalancing).
Execution: Use Limit Orders placed slightly below the target price. Sell predefined portions (e.g., 1/3, 1/2).
Managing Remainder: Adjust the stop-loss on the remaining shares (e.g., move to breakeven or trail more tightly).
VI. Full Exit Strategy

Conditions for Profitable Exit:
Confirmed long-term trend reversal (e.g., break below major MA or trendline).
Trailing stop-loss is triggered.
Ultimate long-term target reached / extreme overvaluation.
Conditions for Loss Exit:
Initial or revised stop-loss is triggered.
Major negative fundamental change invalidates the long-term thesis.
Order Types:
Stop-Losses: Use resting Stop Orders (trigger market sell) or potentially Stop-Limit orders (price protection but risk non-fill).
Discretionary Exits: Use Limit Orders for planned exits near targets. Market Orders only if immediate exit is necessary due to sudden signal change (accept potential slippage).
VII. Slippage & Cost Considerations

For a liquid stock like AAPL, slippage using Limit Orders during normal market hours is typically minimal for retail sizes. Market Orders increase slippage risk.
Using Limit Orders and lower trading frequency generally minimizes commission costs and adverse price execution.
(Reminder: This execution plan is based on the output of the subagent and follows general principles. It is for informational purposes only and not financial advice. Real-world execution involves broker platform specifics, fees, and live market dynamics.)

This detailed execution plan has now been conceptually stored in the state key execution_plan_output.

Step 4: Evaluate Overall Risk Profile

Finally, we reach the last step: assessing the overall risk. I will now call the risk_analyst subagent. This agent will synthesize all the information gathered and generated so far:

The market analysis for AAPL (market_data_analysis_output).
The proposed trading strategies (proposed_trading_strategies_output).
The detailed execution plan (execution_plan_output).
Your stated risk attitude (Moderate).
Your stated investment period (Long-term).
The risk_analyst will provide a comprehensive evaluation, checking for consistency between the plan components and your profile, highlighting potential risks, and identifying any misalignments.

Okay, the execution_analyst subagent has generated a detailed execution plan analysis for the five proposed AAPL trading strategies, considering your moderate risk profile, long-term horizon, and lack of specific execution preferences.

Here is the execution plan presented in markdown format:

Important Disclaimer: For Educational and Informational Purposes Only.

The information and trading strategy outlines provided by this tool, including any analysis, commentary, or potential scenarios, are generated by an AI model and are for educational and informational purposes only. They do not constitute, and should not be interpreted as, financial advice, investment recommendations, endorsements, or offers to buy or sell any securities or other financial instruments.

Google and its affiliates make no representations or warranties of any kind, express or implied, about the completeness, accuracy, reliability, suitability, or availability with respect to the information provided. Any reliance you place on such information is therefore strictly at your own risk.

This is not an offer to buy or sell any security. Investment decisions should not be made based solely on the information provided here. Financial markets are subject to risks, and past performance is not indicative of future results. You should conduct your own thorough research and consult with a qualified independent financial advisor before making any investment decisions.

By using this tool and reviewing these strategies, you acknowledge that you understand this disclaimer and agree that Google and its affiliates are not liable for any losses or damages arising from your use of or reliance on this information.

Execution Plan Analysis for AAPL Strategies
User Profile:

Risk Attitude: Moderate
Investment Period: Long-term (Months to Years)
Execution Preferences: None Specified (Standard best practices assumed)
Instrument: Apple Inc. (AAPL) Stock (and options for Covered Calls)
Strategy 1: Core Buy & Hold on AAPL
I. Foundational Execution Philosophy:

Synthesis: Acquire AAPL shares for long-term holding through market cycles. Moderate risk suggests favoring entries during fair value periods or pullbacks. Simplicity and efficiency in initial acquisition are key.
Constraints/Priorities: Efficient entry, minimize costs, patience, focus on fundamentals.
II. Entry Execution Strategy:

Optimal Entry Conditions & Timing: Consider entry after pullbacks (e.g., 10-15%) or consolidation, referencing longer-term charts (Weekly/Monthly MAs). Avoid entry just before major volatile events (e.g., earnings) if seeking stability.
Order Types & Placement: Use Limit Orders to control entry price, set at or slightly below current market or at desired lower levels. Avoid Market Orders unless immediate execution is crucial and liquidity is high.
Initial Position Sizing & Risk Allocation: Determine target portfolio allocation (e.g., 5-15%). Position size manages risk. Moderate profile avoids over-allocation.
Initial Stop-Loss Strategy: Generally not used. Risk managed by allocation, diversification, and fundamental review trigger (significant negative change in outlook).
III. Holding & In-Trade Management Strategy:

Active Monitoring vs. Passive Holding: Primarily passive. Quarterly review (earnings) for fundamentals. Monitor major news. Avoid reacting to daily noise.
Dynamic Risk Management: Periodically review allocation size. Rebalance (trim) if position becomes significantly overweight due to appreciation.
Handling Volatility & Drawdowns: Accept volatility. Hold through typical corrections (10-20%) if fundamentals are intact. Deeper drawdowns (>30-40%) trigger deeper review.
IV. Accumulation (Scaling-In) Strategy:

Conditions & Rationale: Can be pre-planned (tranches over months) or opportunistic (adding during dips if fundamentals strong). Averages entry cost.
Execution Tactics: Limit Orders at support levels during pullbacks.
Adjusting Overall Position Risk: Ensure total position stays within allocation limits.
V. Partial Sell (Profit-Taking / Scaling-Out) Strategy:

Triggers & Rationale: Primarily for portfolio rebalancing if position becomes significantly overweight (e.g., >20-25%). Not for market timing.
Execution Tactics: Limit Orders during market strength to trim back to target allocation.
Managing the Remaining Position: Hold remainder under Buy & Hold mandate.
VI. Full Exit Strategy:

Conditions for Full Profitable Exit: Long-term goals met (e.g., retirement) or fundamental deterioration. Not typically price target based.
Conditions for Full Exit at a Loss: Confirmed, significant negative change in fundamentals invalidating the thesis.
Order Types & Execution: Limit Orders preferred, potentially scaled out if position is large.
Considerations for Slippage & Market Impact: Minimal for AAPL with Limit Orders for standard sizes. Scale large exits over time.
Strategy 2: DRIP (Dividend Reinvestment Plan) on AAPL
I. Foundational Execution Philosophy:

Synthesis: Enhancement of Buy & Hold, focusing on automatic dividend reinvestment for compounding. Aligns perfectly with Moderate risk, Long-term profile.
Constraints/Priorities: Enable DRIP with broker, ensure efficient reinvestment (often fractional shares).
II. Entry Execution Strategy:

Optimal Entry Conditions & Timing: Same as Core Buy & Hold.
Order Types & Placement: Limit Orders for initial stock purchase. Crucially, enable DRIP in the brokerage account.
Initial Position Sizing & Risk Allocation: Same as Core Buy & Hold.
Initial Stop-Loss Strategy: Same as Core Buy & Hold.
III. Holding & In-Trade Management Strategy:

Active Monitoring vs. Passive Holding: Same as Core Buy & Hold, plus verifying dividends are reinvested.
Dynamic Risk Management: Same as Core Buy & Hold, but rebalancing might be needed slightly more often due to DRIP's compounding effect.
Handling Volatility & Drawdowns: Same as Core Buy & Hold. Dividends buy more shares during drawdowns (potential advantage).
IV. Accumulation (Scaling-In) Strategy:

Conditions & Rationale: Automatic via DRIP. Voluntary additions follow Core Buy & Hold logic (dips, tranches).
Execution Tactics: Limit Orders for voluntary additions. DRIP is automatic.
Adjusting Overall Position Risk: Monitor total allocation, as DRIP continuously increases position size.
V. Partial Sell (Profit-Taking / Scaling-Out) Strategy:

Triggers & Rationale: Primarily for rebalancing if overweight. May need to temporarily disable DRIP before selling.
Execution Tactics: Limit Orders for selling stock.
Managing the Remaining Position: Re-enable DRIP if disabled. Hold remainder long-term.
VI. Full Exit Strategy:

Conditions: Same as Core Buy & Hold.
Order Types & Execution: Limit Orders preferred. Disable DRIP before exit.
Considerations for Slippage & Market Impact: Same as Core Buy & Hold.
Strategy 3: Value Averaging Dips on AAPL
I. Foundational Execution Philosophy:

Synthesis: Build position by investing more during price declines ("dips") to lower average cost. Requires defining dips and having cash available. More active monitoring needed.
Constraints/Priorities: Define "dip" criteria (e.g., % drop, MA touch). Requires available cash, disciplined execution.
II. Entry Execution Strategy:

Optimal Entry Conditions & Timing: Initial entry like Buy & Hold. Subsequent entries triggered by pre-defined dips (e.g., 5-10% drop, hit 100/200-day MA). Look for signs of potential stabilization before entering on a dip.
Order Types & Placement: Limit Orders at target dip levels (consider GTC orders).
Initial Position Sizing & Risk Allocation: Initial position might be smaller (25-50% of target). Invest more capital during larger dips potentially. Total allocation still key.
Initial Stop-Loss Strategy: Risk managed by averaging down and allocation size. Maybe a "catastrophic" stop below major long-term support.
III. Holding & In-Trade Management Strategy:

Active Monitoring vs. Passive Holding: More active; weekly review for dip opportunities. Quarterly fundamental review still essential.
Dynamic Risk Management: Execute dip-buying plan up to target allocation. Monitor average cost.
Handling Volatility & Drawdowns: View dips as opportunities to execute strategy, assuming fundamentals intact.
IV. Accumulation (Scaling-In) Strategy:

Conditions & Rationale: This is the core strategy – accumulate when dip criteria met.
Execution Tactics: Execute Limit Orders at dip levels. Track purchases and average cost.
Adjusting Overall Position Risk: Total risk increases with each purchase up to the target allocation.
V. Partial Sell (Profit-Taking / Scaling-Out) Strategy:

Triggers & Rationale: Primarily for rebalancing if overweight after a rally following dip-buying.
Execution Tactics: Limit Orders during strength to trim back to target allocation.
Managing the Remaining Position: Hold long-term. Dip-buying might resume if allocation drops below target again.
VI. Full Exit Strategy:

Conditions: Same as Buy & Hold (fundamental deterioration, life goals). Maybe break of major multi-year support.
Order Types & Execution: Limit Orders preferred.
Considerations for Slippage & Market Impact: Same as Buy & Hold.
Strategy 4: Covered Calls on AAPL
I. Foundational Execution Philosophy:

Synthesis: Hold stock (100 share lots) and sell call options against it for income. Moderate risk implies selling farther OTM calls (e.g., 0.15-0.30 delta) with longer expiries (45-90 days) to reduce assignment risk. Accepts capped upside for premium.
Constraints/Priorities: Hold stock in 100s, options-approved account, understand options mechanics. Priority: income generation, minimize unwanted assignment.
II. Entry Execution Strategy:

Optimal Entry Conditions & Timing (Stock): Acquire stock like Buy & Hold / Value Averaging.
Optimal Entry Conditions & Timing (Selling Calls): Sell calls after owning stock. Favorable times: higher IV (e.g., IV Rank > 30-50), after moderate rally anticipating consolidation. Avoid selling just before earnings unless accepting high risk.
Order Types & Placement (Stock): Limit Orders.
Order Types & Placement (Options): Limit Orders to sell calls. Choose strike sufficiently OTM (e.g., 0.15-0.30 delta), expiration 45-90 days out. Sell at bid or mid-price.
Initial Position Sizing & Risk Allocation: Stock risk managed by allocation. Opportunity cost risk if stock surges past strike. Premium received cushions downside slightly.
Initial Stop-Loss Strategy (Stock): Typically none (fundamental review key).
Initial Stop-Loss Strategy (Options): Manage short call: rules to close early (e.g., capture 50-75% of premium decay) or roll if threatened.
III. Holding & In-Trade Management Strategy:

Active Monitoring vs. Passive Holding: More active. Monitor stock vs. strike, time decay, IV. Weekly review usually sufficient unless near expiry/strike.
Dynamic Risk Management (Options):
Rolling: If stock approaches strike and you want to keep shares, buy back current call and sell a new one (higher strike / further expiry), ideally for net credit.
Closing Early: Capture profit if premium decays significantly early.
Assignment: Accept if call expires ITM (max profit for cycle) or roll beforehand. Moderate profile might prefer rolling.
Handling Volatility & Drawdowns (Stock): Hold stock per long-term thesis. Higher IV during drawdowns can mean higher premiums for new calls.
IV. Accumulation (Scaling-In) Strategy:

Conditions & Rationale (Stock): Accumulate stock per Buy & Hold / Value Averaging principles (in 100s).
Conditions & Rationale (Options): Sell one call per 100 shares held. Not typically "scaled".
Execution Tactics: Limit orders for stock.
Adjusting Overall Position Risk: Managed by stock allocation. Calls slightly reduce cost basis/risk but cap upside.
V. Partial Sell (Profit-Taking / Scaling-Out) Strategy:

Triggers & Rationale (Stock): Primarily for rebalancing overweight stock. Close corresponding short calls simultaneously.
Triggers & Rationale (Options): Buy back short call early to capture profit (e.g., 50-75% of initial premium).
Execution Tactics: Limit Orders to buy back calls / sell stock.
Managing the Remaining Position: Continue holding stock and selling new calls.
VI. Full Exit Strategy:

Conditions: Fundamental deterioration or life goals met. Close both stock and any open short calls.
Order Types & Execution: Close short call first (Limit Order to buy) or simultaneously with stock sale (Limit Orders).
Considerations for Slippage & Market Impact: Manage stock exit as per Buy & Hold. Use Limit Orders for options, especially less liquid ones.
Strategy 5: GARP (Growth At a Reasonable Price) Accumulation on AAPL
I. Foundational Execution Philosophy:

Synthesis: Acquire shares when growth potential seems reasonably valued, avoiding hype. Combines fundamental growth analysis with valuation discipline (P/E, PEG, P/S vs. history/peers). More active than Buy & Hold, grounded in fundamentals.
Constraints/Priorities: Requires ongoing fundamental & valuation analysis. Define "reasonable price" criteria. Priority: disciplined entry based on value.
II. Entry Execution Strategy:

Optimal Entry Conditions & Timing: Enter when fundamentals strong and valuation reasonable (e.g., PEG ~1.0-1.5, P/E below average/low end of range, P/S reasonable). Often occurs during market corrections or consolidations where earnings catch up. May coincide with technical support (e.g., 200-day MA).
Order Types & Placement: Limit Orders at price levels corresponding to target valuation/technical support. Patience needed.
Initial Position Sizing & Risk Allocation: Initial entry might be partial allocation (33-50%), anticipating further accumulation if value improves. Avoid overly large initial bets.
Initial Stop-Loss Strategy: Primarily fundamental (growth downgrade, sustained negative re-rating). Secondary "disaster" technical stop possible (break multi-year lows).
III. Holding & In-Trade Management Strategy:

Active Monitoring vs. Passive Holding: Regular monitoring (monthly/quarterly) of fundamentals (growth) and valuation metrics.
Dynamic Risk Management: Reassess GARP thesis. Accumulate if growth strong & valuation reasonable/improving. Trim if valuation becomes excessive (e.g., PEG > 2.5-3, P/E significantly above highs without matching growth).
Handling Volatility & Drawdowns: View drawdowns improving valuation as accumulation opportunities (if fundamentals intact). Reassess thesis if fundamentals weaken alongside price.
IV. Accumulation (Scaling-In) Strategy:

Conditions & Rationale: Central to strategy – accumulate when GARP criteria met or improve (price dips further into value zone).
Execution Tactics: Limit Orders at pre-identified value levels. Track average cost.
Adjusting Overall Position Risk: Ensure total position stays within allocation limits.
V. Partial Sell (Profit-Taking / Scaling-Out) Strategy:

Triggers & Rationale: Primarily when valuation becomes extended/stretched, suggesting price is no longer "reasonable". Moderate risk profile might trim here even if fundamentals okay. Also for rebalancing if overweight.
Execution Tactics: Limit Orders during strength when valuation appears excessive.
Managing the Remaining Position: Hold remainder if fundamentals strong, but pause accumulation until valuation normalizes.
VI. Full Exit Strategy:

Conditions: Fundamental growth story significantly weakens/degrades. Secondary trigger: extreme valuation + signs of slowing growth. Life goals met.
Conditions for Full Exit at a Loss: Initial GARP thesis proves wrong (growth fails, permanent lower multiple assigned). Catastrophic technical break.
Order Types & Execution: Limit Orders preferred.
Considerations for Slippage & Market Impact: Same as Buy & Hold.
This detailed execution plan has now been conceptually stored in the state key execution_plan_output.

Step 4: Evaluate Overall Risk Profile

We have now gathered market analysis (market_data_analysis_output), developed potential trading strategies (proposed_trading_strategies_output), and defined detailed execution plans (execution_plan_output).

The final step is to assess the overall risk profile of this potential financial plan. I will call the risk_analyst subagent to perform this evaluation.

The risk_analyst will use:

The market data analysis (market_data_analysis_output).
The proposed trading strategies (proposed_trading_strategies_output).
The execution plan (execution_plan_output).
Your stated risk attitude (Moderate).
Your stated investment period (Long-term).
The agent will evaluate how well these components align, highlight potential risks (like concentration risk, execution risk, or misalignment with your profile), and provide a comprehensive risk assessment.

Shall I proceed with calling the risk_analyst subagent?

Excellent. The risk_analyst subagent has completed the final step, providing a comprehensive evaluation of the overall risk profile associated with the proposed plan for investing in AAPL. Here is the risk assessment presented in markdown format:

Comprehensive Risk Analysis Report: AAPL Investment Plan (Moderate Risk, Long-Term Horizon)
This report assesses the overall risk based on the market analysis, proposed strategies, execution plan, and your user profile. (Note: Specific details from previous steps are assumed based on a typical plan for this profile).

1. Executive Summary of Risks

Primary Risks:
Concentration Risk: Significant exposure to a single stock (AAPL). Performance is heavily reliant on this one company.
Market Risk: Vulnerability to broad market downturns, tech sector rotations, and negative company-specific events (e.g., slowing growth, regulatory issues).
Strategy Risk (if using Covered Calls): Selling covered calls caps upside potential and adds management complexity.
Overall Qualitative Risk Assessment: Medium. The plan aligns with a long-term view, but the single-stock focus elevates risk compared to a diversified portfolio. This fits a "Moderate" tolerance only if the AAPL position is an appropriate fraction of your total diversified assets. If AAPL represents a very large portion of your wealth, the risk level could be High.
2. Market Risks

Identified: Directional risk (price decline), volatility risk, tech sector risk, event risk (earnings, product launches), inflation/interest rate risk, and the key Concentration Risk.
Assessment: The long-term horizon helps mitigate short-term volatility, but a prolonged downturn or stagnation in AAPL could significantly impact goals. Concentration risk is the most prominent risk – poor AAPL performance cannot be offset elsewhere within this specific plan.
Mitigation:
Diversification (CRITICAL): Ensure this AAPL position is part of a broader, well-diversified portfolio. Define a maximum allocation percentage for AAPL.
Position Sizing: Adhere to sizing rules; consider scaling in (DCA).
Review Triggers: Set criteria for re-evaluating the holding based on drawdowns or fundamental changes.
3. Liquidity Risks

Identified: Risk of not being able to trade at desired prices.
Assessment: Very low for AAPL common stock due to high volume. Options liquidity is generally good for standard strikes/expirations but can vary. Using Limit Orders aligns with minimizing this risk.
Mitigation: Use Limit Orders; trade liquid options (if applicable); trade during regular market hours.
4. Counterparty & Platform Risks

Identified: Broker insolvency (mitigated by protection schemes like SIPC), platform outages/glitches, cybersecurity risks.
Assessment: Using large, regulated brokers minimizes insolvency risk. Platform risks are infrequent but possible.
Mitigation: Use reputable, regulated brokers; enable Two-Factor Authentication (2FA); have backup access methods (phone desk); be aware of platform status.
5. Operational & Technological Risks

Identified: Human error in order entry, personal system failures (internet/PC), failure to adhere to the plan (emotional decisions), failure to manage options correctly.
Assessment: Execution errors can cause losses. Plan adherence is key for long-term strategies.
Mitigation: Use trade checklists; review confirmations; maintain clear plan documentation; set alerts (price, expiration); consider backup internet.
6. Strategy-Specific & Model Risks

Identified: Risk that the core premise (AAPL long-term growth) is wrong; opportunity cost if AAPL underperforms; risk of adding to losers with DCA; risk of capped upside/assignment with covered calls; concentration risk at the strategy level; "Black Swan" event risk.
Assessment: Strategy success hinges on AAPL's future. Concentration risk is inherent. Covered calls involve trade-offs (income vs. max growth).
Mitigation: Regularly monitor AAPL fundamentals; re-evaluate covered call suitability vs. goals; strictly adhere to portfolio allocation limits; consider negative scenarios.
7. Psychological Risks for the Trader

Identified: Fear/panic selling; impatience; confirmation bias; regret (especially with covered calls); difficulty adhering to DCA during downturns.
Assessment: Long-term investing requires emotional discipline. Holding a concentrated position through drawdowns can be stressful for a Moderate investor.
Mitigation: Adhere to a written plan; focus on the long-term horizon; keep a trading journal (optional); set realistic expectations; automate contributions if possible.
8. Overall Alignment with User Profile & Concluding Remarks

Alignment: Generally aligns with Long-term period. Can align with Moderate risk if Concentration Risk is managed via diversification across the total portfolio. Execution preferences fit well.
Potential Misalignments:
Concentration Risk: If AAPL is too large a percentage of total assets, the actual risk might exceed "Moderate".
Covered Calls: Add complexity and cap upside, potentially conflicting with pure long-term growth focus. Ensure comfort with this trade-off.
Critical Considerations:
Diversification is Paramount: The suitability for a "Moderate" profile depends heavily on diversification outside this AAPL position.
Conviction & Discipline: Requires belief in AAPL's future and the discipline to hold through volatility.
Regular Review: Periodically reassess the investment thesis for AAPL.
Important Disclaimer: For Educational and Informational Purposes Only.

The information provided, including analysis, strategies, execution plans, and risk assessments, is generated by an AI model for educational purposes only. It does not constitute financial advice, investment recommendations, or offers to buy/sell securities. Google makes no warranties about accuracy or completeness. Relying on this information is strictly at your own risk. Financial markets involve risks; past performance doesn't guarantee future results. Always conduct thorough independent research and consult a qualified financial advisor before making investment decisions. Your use of this tool signifies acknowledgment and acceptance of this disclaimer.

This final risk assessment has been conceptually stored in the state key final_risk_assessment_output.

We have now completed the structured financial advisory process:

Analyzed the market data for AAPL.
Developed potential trading strategies based on your profile.
Defined a detailed execution plan.
Evaluated the overall risk profile of the proposed plan.
Do you have any questions about this final risk assessment or any other part of the process?

User: no thanks

You're welcome! We have now gone through the entire process, from analyzing AAPL to evaluating the overall risk of potential strategies tailored to your moderate risk attitude and long-term investment horizon.

Remember, all the information provided today, including the strategies and risk assessment, is for educational and informational purposes only and does not constitute financial advice. Always conduct your own research and consult with a qualified independent financial advisor before making any investment decisions.

If you decide to explore another ticker or revisit this process in the future, feel free to ask. Have a great day!

User :you too

Thank you!
```

## Running Tests

For running tests and evaluation, install the extra dependencies:

```bash
poetry install --with dev
```

Then the tests and evaluation can be run from the `financial-advisor` directory using
the `pytest` module:

```bash
python3 -m pytest tests
python3 -m pytest eval
```

`tests` runs the agent on a sample request, and makes sure that every component
is functional. `eval` is a demonstration of how to evaluate the agent, using the
`AgentEvaluator` in ADK. It sends a couple requests to the agent and expects
that the agent's responses match a pre-defined response reasonably well.


## Deployment

The Financial Advisor can be deployed to Vertex AI Agent Engine using the following
commands:

```bash
poetry install --with deployment
python3 deployment/deploy.py --create
```

When the deployment finishes, it will print a line like this:

```
Created remote agent: projects/<PROJECT_NUMBER>/locations/<PROJECT_LOCATION>/reasoningEngines/<AGENT_ENGINE_ID>
```

If you forgot the AGENT_ENGINE_ID, you can list existing agents using:

```bash
python3 deployment/deploy.py --list
```

The output will be like:

```
All remote agents:

123456789 ("financial_advisor")
- Create time: 2025-05-12 12:35:34.245431+00:00
- Update time: 2025-05-12 12:36:01.421432+00:00
```

You may interact with the deployed agent using the `test_deployment.py` script
```bash
$ export USER_ID=<any string>
$ python3 deployment/test_deployment.py --resource_id=${AGENT_ENGINE_ID} --user_id=${USER_ID}
Found agent with resource ID: ...
Created session for user ID: ...
Type 'quit' to exit.
Input: Hello, what can you do for me?
Response: Hello! I can guide you through a structured process to receive financial advice. We'll work together with a team of expert subagents to:

1.  **Analyze a market ticker**: We'll start by having you provide a market ticker symbol (e.g., AAPL, GOOGL). Our data analyst subagent will then provide a comprehensive analysis of it.
2.  **Develop trading strategies**: Based on the market analysis and your risk attitude and investment period, our trading strategist subagent will propose potential trading strategies.
3.  **Define an execution plan**: Next, our execution specialist subagent will create a detailed plan for implementing the chosen strategy, considering factors like order types and timing.
4.  **Evaluate the overall risk**: Finally, our risk analyst subagent will assess the overall risk of the financial plan, ensuring it aligns with your goals and risk tolerance.

Would you like to begin by providing a market ticker symbol for analysis?
```

To delete the deployed agent, you may run the following command:

```bash
python3 deployment/deploy.py --delete --resource_id=${AGENT_ENGINE_ID}
```

## Customization

1. Enhance Data_Analyst Module Search Capabilities with Specialized Stock Repositories:
To empower the data_analyst module with more comprehensive insights, expand its search functionality to directly access and integrate with specialized stock-related data repositories. This would involve connecting to databases, APIs, or data lakes containing real-time and historical stock prices, trading volumes, company financial statements (e.g., income statements, balance sheets, cash flow statements), news articles, analyst ratings, and potentially alternative data sources (e.g., satellite imagery for supply chain analysis, social media sentiment). The goal is to provide data analysts with a richer, more granular, and domain-specific dataset to perform in-depth market research, trend analysis, and predictive modeling.
2. Establish and Implement Diverse Analyst Personas for Tailored Access and Functionality:
Systematically define and implement a broader range of analyst personas or role-based access configurations tailored to specific analytical needs and organizational structures. This involves identifying different types of data analysts (e.g., quantitative analysts, fundamental analysts, risk analysts, compliance analysts, market researchers) and mapping their unique data access requirements, tool functionalities, and reporting needs. By assigning specific roles or personas, the system can ensure that each analyst has access only to the relevant data, tools, and features necessary for their tasks, improving security, streamlining workflows, and preventing information overload. This also allows for the customization of user interfaces and analytical dashboards to better suit the preferences and expertise of each persona.
3. Iteratively Refine Prompt Engineering for Optimal Result Precision and Relevance:
Continuously iterate on the strategies and techniques used in prompt engineering to elicit more precise, relevant, and actionable results from generative AI models or search algorithms. This process involves experimenting with various prompt structures, keywords, contextual information, examples, and constraints to guide the AI towards producing outputs that directly address the user's intent and specific information requirements. Regular feedback loops, A/B testing of different prompts, and ongoing analysis of result quality are crucial to refine the prompts. The aim is to minimize irrelevant or inaccurate information, enhance the clarity and conciseness of the outputs, and ensure that the results are consistently aligned with the analytical objectives.



================================================
File: pyproject.toml
================================================
[project]
name = "financial-advisor"
version = "0.1"
description = "AI-driven agent designed to facilitate the exploration of the financial advisor landscape"
authors = [{ name = "Antonio Gulli", email = "gulli@google.com" }]
license = "Apache License 2.0"
readme = "README.md"

[tool.poetry.dependencies]
google-cloud-aiplatform = { version = "^1.93.0", extras = [
    "adk",
    "agent-engines",
] }
python = "^3.9"
google-genai = "^1.9.0"
pydantic = "^2.10.6"
python-dotenv = "^1.0.1"
google-adk = "^1.0.0"
[tool.poetry.group.dev]
optional = true

[tool.poetry.group.dev.dependencies]
pytest = "^8.3.5"
black = "^25.1.0"
google-adk = { version = "^1.0.0", extras = ["eval"] }
pytest-asyncio = "^0.26.0"

[tool.poetry.group.deployment]
optional = true

[tool.poetry.group.deployment.dependencies]
absl-py = "^2.2.1"

[build-system]
requires = ["poetry-core>=2.0.0,<3.0.0"]
build-backend = "poetry.core.masonry.api"



================================================
File: .env.example
================================================
# Fill in your GCP project info and rename this file to ".env".

GOOGLE_GENAI_USE_VERTEXAI=1
GOOGLE_CLOUD_PROJECT=<YOUR_PROJECT_ID>
GOOGLE_CLOUD_LOCATION=<YOUR_PROJECT_LOCATION>
GOOGLE_CLOUD_STORAGE_BUCKET=<YOUR_STORAGE_BUCKET>  # Only required for deployment on Agent Engine



================================================
File: deployment/deploy.py
================================================
# Copyright 2025 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

"""Deployment script for Financial Advisor"""

import os

import vertexai
from absl import app, flags
from dotenv import load_dotenv
from financial_advisor.agent import root_agent
from vertexai import agent_engines
from vertexai.preview.reasoning_engines import AdkApp

FLAGS = flags.FLAGS
flags.DEFINE_string("project_id", None, "GCP project ID.")
flags.DEFINE_string("location", None, "GCP location.")
flags.DEFINE_string("bucket", None, "GCP bucket.")
flags.DEFINE_string("resource_id", None, "ReasoningEngine resource ID.")

flags.DEFINE_bool("list", False, "List all agents.")
flags.DEFINE_bool("create", False, "Creates a new agent.")
flags.DEFINE_bool("delete", False, "Deletes an existing agent.")
flags.mark_bool_flags_as_mutual_exclusive(["create", "delete"])


def create() -> None:
    """Creates an agent engine for Financial Advisors."""
    adk_app = AdkApp(agent=root_agent, enable_tracing=True)

    remote_agent = agent_engines.create(
        adk_app,
        display_name=root_agent.name,
        requirements=[
            "google-adk (>=0.0.2)",
            "google-cloud-aiplatform[agent_engines] (>=1.91.0,!=1.92.0)",
            "google-genai (>=1.5.0,<2.0.0)",
            "pydantic (>=2.10.6,<3.0.0)",
            "absl-py (>=2.2.1,<3.0.0)",
        ],
        #        extra_packages=[""],
    )
    print(f"Created remote agent: {remote_agent.resource_name}")


def delete(resource_id: str) -> None:
    remote_agent = agent_engines.get(resource_id)
    remote_agent.delete(force=True)
    print(f"Deleted remote agent: {resource_id}")


def list_agents() -> None:
    remote_agents = agent_engines.list()
    template = """
{agent.name} ("{agent.display_name}")
- Create time: {agent.create_time}
- Update time: {agent.update_time}
"""
    remote_agents_string = "\n".join(
        template.format(agent=agent) for agent in remote_agents
    )
    print(f"All remote agents:\n{remote_agents_string}")


def main(argv: list[str]) -> None:
    del argv  # unused
    load_dotenv()

    project_id = (
        FLAGS.project_id
        if FLAGS.project_id
        else os.getenv("GOOGLE_CLOUD_PROJECT")
    )
    location = (
        FLAGS.location if FLAGS.location else os.getenv("GOOGLE_CLOUD_LOCATION")
    )
    bucket = (
        FLAGS.bucket
        if FLAGS.bucket
        else os.getenv("GOOGLE_CLOUD_STORAGE_BUCKET")
    )

    print(f"PROJECT: {project_id}")
    print(f"LOCATION: {location}")
    print(f"BUCKET: {bucket}")

    if not project_id:
        print("Missing required environment variable: GOOGLE_CLOUD_PROJECT")
        return
    elif not location:
        print("Missing required environment variable: GOOGLE_CLOUD_LOCATION")
        return
    elif not bucket:
        print(
            "Missing required environment variable: GOOGLE_CLOUD_STORAGE_BUCKET"
        )
        return

    vertexai.init(
        project=project_id,
        location=location,
        staging_bucket=f"gs://{bucket}",
    )

    if FLAGS.list:
        list_agents()
    elif FLAGS.create:
        create()
    elif FLAGS.delete:
        if not FLAGS.resource_id:
            print("resource_id is required for delete")
            return
        delete(FLAGS.resource_id)
    else:
        print("Unknown command")


if __name__ == "__main__":
    app.run(main)



================================================
File: deployment/test_deployment.py
================================================
# Copyright 2025 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

"""Test deployment of Academic Research Agent to Agent Engine."""

import os

import vertexai
from absl import app, flags
from dotenv import load_dotenv
from vertexai import agent_engines

FLAGS = flags.FLAGS

flags.DEFINE_string("project_id", None, "GCP project ID.")
flags.DEFINE_string("location", None, "GCP location.")
flags.DEFINE_string("bucket", None, "GCP bucket.")
flags.DEFINE_string(
    "resource_id",
    None,
    "ReasoningEngine resource ID (returned after deploying the agent)",
)
flags.DEFINE_string("user_id", None, "User ID (can be any string).")
flags.mark_flag_as_required("resource_id")
flags.mark_flag_as_required("user_id")


def main(argv: list[str]) -> None:  # pylint: disable=unused-argument

    load_dotenv()

    project_id = (
        FLAGS.project_id
        if FLAGS.project_id
        else os.getenv("GOOGLE_CLOUD_PROJECT")
    )
    location = (
        FLAGS.location if FLAGS.location else os.getenv("GOOGLE_CLOUD_LOCATION")
    )
    bucket = (
        FLAGS.bucket
        if FLAGS.bucket
        else os.getenv("GOOGLE_CLOUD_STORAGE_BUCKET")
    )

    project_id = os.getenv("GOOGLE_CLOUD_PROJECT")
    location = os.getenv("GOOGLE_CLOUD_LOCATION")
    bucket = os.getenv("GOOGLE_CLOUD_STORAGE_BUCKET")

    if not project_id:
        print("Missing required environment variable: GOOGLE_CLOUD_PROJECT")
        return
    elif not location:
        print("Missing required environment variable: GOOGLE_CLOUD_LOCATION")
        return
    elif not bucket:
        print(
            "Missing required environment variable: GOOGLE_CLOUD_STORAGE_BUCKET"
        )
        return

    vertexai.init(
        project=project_id,
        location=location,
        staging_bucket=f"gs://{bucket}",
    )

    agent = agent_engines.get(FLAGS.resource_id)
    print(f"Found agent with resource ID: {FLAGS.resource_id}")
    session = agent.create_session(user_id=FLAGS.user_id)
    print(f"Created session for user ID: {FLAGS.user_id}")
    print("Type 'quit' to exit.")
    while True:
        user_input = input("Input: ")
        if user_input == "quit":
            break

        for event in agent.stream_query(
            user_id=FLAGS.user_id, session_id=session["id"], message=user_input
        ):
            if "content" in event:
                if "parts" in event["content"]:
                    parts = event["content"]["parts"]
                    for part in parts:
                        if "text" in part:
                            text_part = part["text"]
                            print(f"Response: {text_part}")

    agent.delete_session(user_id=FLAGS.user_id, session_id=session["id"])
    print(f"Deleted session for user ID: {FLAGS.user_id}")


if __name__ == "__main__":
    app.run(main)



================================================
File: eval/test_eval.py
================================================
# Copyright 2025 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

"""Basic evaluation for Financial Advisor"""

import pathlib

import dotenv
import pytest
from google.adk.evaluation.agent_evaluator import AgentEvaluator

pytest_plugins = ("pytest_asyncio",)


@pytest.fixture(scope="session", autouse=True)
def load_env():
    dotenv.load_dotenv()


@pytest.mark.asyncio
async def test_all():
    """Test the agent's basic ability on a few examples."""
    print("Running evaluate")
    await AgentEvaluator.evaluate(
        "financial_advisor",
        str(pathlib.Path(__file__).parent / "data"),
        num_runs=5,
    )



================================================
File: eval/data/financial-advisor.test.json
================================================
{
  "eval_set_id": "evalset8758d3",
  "name": "eval/data/financial-advisor.test.json",
  "description": null,
  "eval_cases": [
    {
      "eval_id": "intro_only",
      "conversation": [
        {
          "invocation_id": "e-79790286-0575-4e5f-a82c-2046aa181a40",
          "user_content": {
            "parts": [
              {
                "video_metadata": null,
                "thought": null,
                "inline_data": null,
                "code_execution_result": null,
                "executable_code": null,
                "file_data": null,
                "function_call": null,
                "function_response": null,
                "text": "Hello. What can you do for me?"
              }
            ],
            "role": "user"
          },
          "final_response": {
            "parts": [
              {
                "video_metadata": null,
                "thought": null,
                "inline_data": null,
                "code_execution_result": null,
                "executable_code": null,
                "file_data": null,
                "function_call": null,
                "function_response": null,
                "text": "Hello! I'm here to help you navigate the world of financial decision-making.\nMy main goal is to provide you with comprehensive financial advice by guiding you through a step-by-step process.\nWe'll work together to analyze market tickers, develop effective trading strategies, define clear execution plans,\nand thoroughly evaluate your overall risk.\n\nRemember that at each step you can always ask to “show me the detailed result as markdown”.\n\nReady to get started?\n\nImportant Disclaimer: For Educational and Informational Purposes Only.\nThe information and trading strategy outlines provided by this tool, including any analysis,\ncommentary, or potential scenarios, are generated by an AI model and are for educational and informational purposes only.\nThey do not constitute, and should not be interpreted as, financial advice, investment recommendations, endorsements,\nor offers to buy or sell any securities or other financial instruments.\nGoogle and its affiliates make no representations or warranties of any kind, express or implied, about the completeness,\naccuracy, reliability, suitability, or availability with respect to the information provided. Any reliance you place\non such information is therefore strictly at your own risk.\nThis is not an offer to buy or sell any security.\nInvestment decisions should not be made based solely on the information provided here.\nFinancial markets are subject to risks, and past performance is not indicative of future results.\nYou should conduct your own thorough research and consult with a qualified independent financial advisor before making any investment decisions.\nBy using this tool and reviewing these strategies, you acknowledge that you understand this disclaimer and agree that\nGoogle and its affiliates are not liable for any losses or damages arising from your use of or reliance on this information."
              }
            ],
            "role": null
          },
          "intermediate_data": {
            "tool_uses": [],
            "intermediate_responses": []
          },
          "creation_timestamp": 1748006923.754014
        },
        {
          "invocation_id": "e-9bccf2bb-4edc-4640-a92a-53fe5eaf4db7",
          "user_content": {
            "parts": [
              {
                "video_metadata": null,
                "thought": null,
                "inline_data": null,
                "code_execution_result": null,
                "executable_code": null,
                "file_data": null,
                "function_call": null,
                "function_response": null,
                "text": "Yes please."
              }
            ],
            "role": "user"
          },
          "final_response": {
            "parts": [
              {
                "video_metadata": null,
                "thought": null,
                "inline_data": null,
                "code_execution_result": null,
                "executable_code": null,
                "file_data": null,
                "function_call": null,
                "function_response": null,
                "text": "Great! Let's start with the first step: Gathering Market Data Analysis.\n\nI'll be using our `data_analyst` subagent for this.\n\nPlease provide the market ticker symbol you wish to analyze (e.g., AAPL, GOOGL, MSFT)."
              }
            ],
            "role": null
          },
          "intermediate_data": {
            "tool_uses": [],
            "intermediate_responses": []
          },
          "creation_timestamp": 1748006938.006178
        }
      ],
      "session_input": {
        "app_name": "financial_advisor",
        "user_id": "user",
        "state": {}
      },
      "creation_timestamp": 1748006957.655065
    }
  ],
  "creation_timestamp": 1748005920.0499456
}



================================================
File: financial_advisor/__init__.py
================================================
# Copyright 2025 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

"""Financial coordinator: provide reasonable investment strategies"""

from . import agent



================================================
File: financial_advisor/agent.py
================================================
# Copyright 2025 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

"""Financial coordinator: provide reasonable investment strategies"""

from google.adk.agents import LlmAgent
from google.adk.tools.agent_tool import AgentTool

from . import prompt
from .sub_agents.data_analyst import data_analyst_agent
from .sub_agents.execution_analyst import execution_analyst_agent
from .sub_agents.risk_analyst import risk_analyst_agent
from .sub_agents.trading_analyst import trading_analyst_agent

MODEL = "gemini-2.5-pro-preview-05-06"


financial_coordinator = LlmAgent(
    name="financial_coordinator",
    model=MODEL,
    description=(
        "guide users through a structured process to receive financial "
        "advice by orchestrating a series of expert subagents. help them "
        "analyze a market ticker, develop trading strategies, define "
        "execution plans, and evaluate the overall risk."
    ),
    instruction=prompt.FINANCIAL_COORDINATOR_PROMPT,
    output_key="financial_coordinator_output",
    tools=[
        AgentTool(agent=data_analyst_agent),
        AgentTool(agent=trading_analyst_agent),
        AgentTool(agent=execution_analyst_agent),
        AgentTool(agent=risk_analyst_agent),
    ],
)

root_agent = financial_coordinator



================================================
File: financial_advisor/prompt.py
================================================
# Copyright 2025 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

"""Prompt for the financial_coordinator_agent."""

FINANCIAL_COORDINATOR_PROMPT = """
Role: Act as a specialized financial advisory assistant.
Your primary goal is to guide users through a structured process to receive financial advice by orchestrating a series of expert subagents.
You will help them analyze a market ticker, develop trading strategies, define execution plans, and evaluate the overall risk.

Overall Instructions for Interaction:

At the beginning, Introduce yourself to the user first. Say something like: "

Hello! I'm here to help you navigate the world of financial decision-making. 
My main goal is to provide you with comprehensive financial advice by guiding you through a step-by-step process. 
We'll work together to analyze market tickers, develop effective trading strategies, define clear execution plans, 
and thoroughly evaluate your overall risk. 


Remember that at each step you can always ask to “show me the detailed result as markdown”.

Ready to get started?
"

Then show immediately this Disclaimer: 

"Important Disclaimer: For Educational and Informational Purposes Only. 
The information and trading strategy outlines provided by this tool, including any analysis, 
commentary, or potential scenarios, are generated by an AI model and are for educational and informational purposes only. 
They do not constitute, and should not be interpreted as, financial advice, investment recommendations, endorsements, 
or offers to buy or sell any securities or other financial instruments. 
Google and its affiliates make no representations or warranties of any kind, express or implied, about the completeness, 
accuracy, reliability, suitability, or availability with respect to the information provided. Any reliance you place 
on such information is therefore strictly at your own risk. 
This is not an offer to buy or sell any security. 
Investment decisions should not be made based solely on the information provided here. 
Financial markets are subject to risks, and past performance is not indicative of future results. 
You should conduct your own thorough research and consult with a qualified independent financial advisor before making any investment decisions.
By using this tool and reviewing these strategies, you acknowledge that you understand this disclaimer and agree that 
Google and its affiliates are not liable for any losses or damages arising from your use of or reliance on this information."


At each step, clearly inform the user about the current subagent being called and the specific information required from them.
After each subagent completes its task, explain the output provided and how it contributes to the overall financial advisory process.
Ensure all state keys are correctly used to pass information between subagents.
Here's the step-by-step breakdown.
For each step, explicitly call the designated subagent and adhere strictly to the specified input and output formats:

* Gather Market Data Analysis (Subagent: data_analyst)

Input: Prompt the user to provide the market ticker symbol they wish to analyze (e.g., AAPL, GOOGL, MSFT).
Action: Call the data_analyst subagent, passing the user-provided market ticker.
Expected Output: The data_analyst subagent MUST return a comprehensive data analysis for the specified market ticker.

* Develop Trading Strategies (Subagent: trading_analyst)

Input:
Prompt the user to define their risk attitude (e.g., conservative, moderate, aggressive).
Prompt the user to specify their investment period (e.g., short-term, medium-term, long-term).
Action: Call the trading_analyst subagent, providing:
The market_data_analysis_output (from state key).
The user-selected risk attitude.
The user-selected investment period.
Expected Output: The trading_analyst subagent MUST generate one or more potential trading strategies tailored to the provided market analysis,
risk attitude, and investment period.
Output the generated extended version by visualizing the results as markdown

* Define Optimal Execution Strategy (Subagent: execution_analyst)

Input:
The proposed_trading_strategies_output (from state key).
The user's risk attitude (previously provided).
The user's investment period (previously provided).
You may also need to ask the user if they have preferences for execution, such as preferred brokers or order types,
if the subagent can utilize this information.
Action: Call the execution_analyst subagent, providing:
The proposed_trading_strategies_output (from state key)..
The user's risk attitude.
The user's investment period.
(Optional: User's execution preferences).
Expected Output: The execution_analyst subagent MUST generate a detailed execution plan for the selected trading strategy (or strategies).
This plan should consider factors like order types, timing, and potential cost implications,
aligned with the user's risk profile and the market_data_analysis.
Output the generated extended version by visualizing the results as markdown

* Evaluate Overall Risk Profile (Subagent: risk_analyst)

Input:
The market_data_analysis_output (from state key).
The proposed_trading_strategies_output (from state key).
The execution_plan_output (from state key).
The user's stated risk attitude.
The user's stated investment period.
Action: Call the risk_analyst subagent, providing all the listed inputs.
Expected Output: The risk_analyst subagent MUST provide a comprehensive evaluation of the overall risk associated with the proposed financial plan
(data, strategies, and execution). This evaluation should highlight consistency with the user's stated risk attitude and investment horizon,
and point out any potential misalignments or concentrated risks.
Output the generated extended version by visualizing the results as markdown
"""



================================================
File: financial_advisor/sub_agents/data_analyst/__init__.py
================================================
# Copyright 2025 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

"""data_analyst_agent for finding information using google search"""

from .agent import data_analyst_agent



================================================
File: financial_advisor/sub_agents/data_analyst/agent.py
================================================
# Copyright 2025 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

"""data_analyst_agent for finding information using google search"""

from google.adk import Agent
from google.adk.tools import google_search

from . import prompt

MODEL = "gemini-2.5-pro-preview-05-06"

data_analyst_agent = Agent(
    model=MODEL,
    name="data_analyst_agent",
    instruction=prompt.DATA_ANALYST_PROMPT,
    output_key="market_data_analysis_output",
    tools=[google_search],
)



================================================
File: financial_advisor/sub_agents/data_analyst/prompt.py
================================================
# Copyright 2025 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

"""data_analyst_agent for finding information using google search"""

DATA_ANALYST_PROMPT = """
Agent Role: data_analyst
Tool Usage: Exclusively use the Google Search tool.

Overall Goal: To generate a comprehensive and timely market analysis report for a provided_ticker. This involves iteratively using the Google Search tool to gather a target number of distinct, recent (within a specified timeframe), and insightful pieces of information. The analysis will focus on both SEC-related data and general market/stock intelligence, which will then be synthesized into a structured report, relying exclusively on the collected data.

Inputs (from calling agent/environment):

provided_ticker: (string, mandatory) The stock market ticker symbol (e.g., AAPL, GOOGL, MSFT). The data_analyst agent must not prompt the user for this input.
max_data_age_days: (integer, optional, default: 7) The maximum age in days for information to be considered "fresh" and relevant. Search results older than this should generally be excluded or explicitly noted if critically important and no newer alternative exists.
target_results_count: (integer, optional, default: 10) The desired number of distinct, high-quality search results to underpin the analysis. The agent should strive to meet this count with relevant information.
Mandatory Process - Data Collection:

Iterative Searching:
Perform multiple, distinct search queries to ensure comprehensive coverage.
Vary search terms to uncover different facets of information.
Prioritize results published within the max_data_age_days. If highly significant older information is found and no recent equivalent exists, it may be included with a note about its age.
Information Focus Areas (ensure coverage if available):
SEC Filings: Search for recent (within max_data_age_days) official filings (e.g., 8-K, 10-Q, 10-K, Form 4 for insider trading).
Financial News & Performance: Look for recent news related to earnings, revenue, profit margins, significant product launches, partnerships, or other business developments. Include context on recent stock price movements and volume if reported.
Market Sentiment & Analyst Opinions: Gather recent analyst ratings, price target adjustments, upgrades/downgrades, and general market sentiment expressed in reputable financial news outlets.
Risk Factors & Opportunities: Identify any newly highlighted risks (e.g., regulatory, competitive, operational) or emerging opportunities discussed in recent reports or news.
Material Events: Search for news on any recent mergers, acquisitions, lawsuits, major leadership changes, or other significant corporate events.
Data Quality: Aim to gather up to target_results_count distinct, insightful, and relevant pieces of information. Prioritize sources known for financial accuracy and objectivity (e.g., major financial news providers, official company releases).
Mandatory Process - Synthesis & Analysis:

Source Exclusivity: Base the entire analysis solely on the collected_results from the data collection phase. Do not introduce external knowledge or assumptions.
Information Integration: Synthesize the gathered information, drawing connections between SEC filings, news articles, analyst opinions, and market data. For example, how does a recent news item relate to a previous SEC filing?
Identify Key Insights:
Determine overarching themes emerging from the data (e.g., strong growth in a specific segment, increasing regulatory pressure).
Pinpoint recent financial updates and their implications.
Assess any significant shifts in market sentiment or analyst consensus.
Clearly list material risks and opportunities identified in the collected data.
Expected Final Output (Structured Report):

The data_analyst must return a single, comprehensive report object or string with the following structure:

**Market Analysis Report for: [provided_ticker]**

**Report Date:** [Current Date of Report Generation]
**Information Freshness Target:** Data primarily from the last [max_data_age_days] days.
**Number of Unique Primary Sources Consulted:** [Actual count of distinct URLs/documents used, aiming for target_results_count]

**1. Executive Summary:**
   * Brief (3-5 bullet points) overview of the most critical findings and overall outlook based *only* on the collected data.

**2. Recent SEC Filings & Regulatory Information:**
   * Summary of key information from recent (within max_data_age_days) SEC filings (e.g., 8-K highlights, key takeaways from 10-Q/K if recent, significant Form 4 transactions).
   * If no significant recent SEC filings were found, explicitly state this.

**3. Recent News, Stock Performance Context & Market Sentiment:**
   * **Significant News:** Summary of major news items impacting the company/stock (e.g., earnings announcements, product updates, partnerships, market-moving events).
   * **Stock Performance Context:** Brief notes on recent stock price trends or notable movements if discussed in the collected news.
   * **Market Sentiment:** Predominant sentiment (e.g., bullish, bearish, neutral) as inferred from news and analyst commentary, with brief justification.

**4. Recent Analyst Commentary & Outlook:**
   * Summary of recent (within max_data_age_days) analyst ratings, price target changes, and key rationales provided by analysts.
   * If no significant recent analyst commentary was found, explicitly state this.

**5. Key Risks & Opportunities (Derived from collected data):**
   * **Identified Risks:** Bullet-point list of critical risk factors or material concerns highlighted in the recent information.
   * **Identified Opportunities:** Bullet-point list of potential opportunities, positive catalysts, or strengths highlighted in the recent information.

**6. Key Reference Articles (List of [Actual count of distinct URLs/documents used] sources):**
   * For each significant article/document used:
     * **Title:** [Article Title]
     * **URL:** [Full URL]
     * **Source:** [Publication/Site Name] (e.g., Reuters, Bloomberg, Company IR)
     * **Author (if available):** [Author's Name]
     * **Date Published:** [Publication Date of Article]
     * **Brief Relevance:** (1-2 sentences on why this source was key to the analysis)
"""



================================================
File: financial_advisor/sub_agents/execution_analyst/__init__.py
================================================
# Copyright 2025 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

"""Execution_analyst_agent for finding the ideal execution strategy"""

from .agent import execution_analyst_agent



================================================
File: financial_advisor/sub_agents/execution_analyst/agent.py
================================================
# Copyright 2025 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

"""Execution_analyst_agent for finding the ideal execution strategy"""

from google.adk import Agent

from . import prompt

MODEL = "gemini-2.5-pro-preview-05-06"

execution_analyst_agent = Agent(
    model=MODEL,
    name="execution_analyst_agent",
    instruction=prompt.EXECUTION_ANALYST_PROMPT,
    output_key="execution_plan_output",
)



================================================
File: financial_advisor/sub_agents/execution_analyst/prompt.py
================================================
# Copyright 2025 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

"""Execution_analyst_agent for finding the ideal execution strategy"""

EXECUTION_ANALYST_PROMPT = """

To generate a detailed and reasoned execution plan for the provided_trading_strategy.
This plan must be meticulously tailored to the user_risk_attitude, user_investment_period, and user_execution_preferences.
The output should be rich in factual analysis, exploring optimal strategies and precise moments for entering, holding, accumulating,
partially selling, and fully exiting positions.

Given Inputs (Strictly Provided - Do Not Prompt User):

provided_trading_strategy: (User-defined strategy) The specific trading strategy selected by the user that forms the basis of this execution plan
(e.g., "Long-only swing trading on QQQ based on breakouts from consolidation patterns after oversold RSI signals,"
"Mean reversion strategy for WTI Crude Oil futures using Bollinger Bands on H1 timeframe,"
"Dollar-cost averaging into VOO ETF for long-term holding"). The execution plan must directly operationalize this strategy.
user_risk_attitude: (User-defined, e.g., Very Conservative, Conservative, Balanced, Aggressive, Very Aggressive).
This dictates acceptable volatility, drawdown tolerance, and influences choices like stop-loss proximity, order type aggressiveness,
and willingness to scale in/out.
user_investment_period: (User-defined, e.g., Intraday, Short-term (days to weeks), Medium-term (weeks to months),
Long-term (months to years)). This impacts the relevance of different chart timeframes, frequency of trade review,
and sensitivity to short-term market noise versus longer-term trends.
user_execution_preferences: (User-defined, e.g., Preferred broker(s) [note if this implies specific order types or commission structures],
preference for limit orders over market orders, desire for low latency vs. cost optimization,
specific order algorithms like TWAP/VWAP if available and relevant).
Requested Output: Detailed Execution Strategy Analysis

Provide a comprehensive analysis structured as follows. For each section, deliver detailed reasoning,
integrate factual trading principles, and explicitly link recommendations back to the implications of the provided_trading_strategy,
user_risk_attitude, user_investment_period, and user_execution_preferences.

EXAMPLE OF STRATEGIES, you can formulate more

I. Foundational Execution Philosophy:
* Synthesize how the combination of the user's risk_attitude, investment_period,
 and execution_preferences fundamentally shapes the recommended approach to executing the provided_trading_strategy.
* Identify any immediate constraints or priorities imposed by these inputs
(e.g., a "Conservative" risk attitude might deprioritize market orders during high volatility for the provided_trading_strategy).

II. Entry Execution Strategy:
* Optimal Entry Conditions & Timing:
* Based on the provided_trading_strategy, what precise confluence of signals/events constitutes a high-probability entry point?
* Discuss considerations for optimal entry timing (e.g., specific market sessions, avoiding news embargoes,
candlestick pattern confirmation, volume analysis) relevant to the user_investment_period.
* Order Types & Placement:
* Recommend specific order types (e.g., Limit, Market, Stop-Limit, Conditional Orders). Justify choices based on the need for price precision
vs. certainty of execution, considering market liquidity, user_risk_attitude, and user_execution_preferences.
* Provide guidance on setting price levels for limit/stop orders relative to key technical levels identified by the provided_trading_strategy.
* Initial Position Sizing & Risk Allocation:
* Propose a method for determining initial position size that aligns with the user_risk_attitude (e.g., fixed fractional,
fixed monetary risk per trade).
* Explain how this initial allocation fits within a broader portfolio risk management context, if inferable.
* Initial Stop-Loss Strategy:
* Detail the methodology for placing initial stop-losses (e.g., volatility-based (ATR), chart-based (support/resistance), time-based).
Justify this in relation to the provided_trading_strategy's logic and the user_risk_attitude.

III. Holding & In-Trade Management Strategy:
* Active Monitoring vs. Passive Holding:
* Based on user_investment_period and provided_trading_strategy, recommend a monitoring frequency and intensity.
* What key performance indicators (KPIs) or market developments should be tracked while the trade is active?
* Dynamic Risk Management (Stop-Loss Adjustments):
* Outline strategies for adjusting stop-losses as the trade progresses (e.g., trailing stops, moving to breakeven,
manual adjustments based on new technical levels). Explain the triggers and rationale, linking to user_risk_attitude.
* Handling Volatility & Drawdowns:
* Discuss approaches to managing open positions during periods of heightened volatility or unexpected drawdowns
(that haven't triggered a stop-loss), considering the user_risk_attitude.

IV. Accumulation (Scaling-In) Strategy (If consistent with the provided_trading_strategy and user_risk_attitude):
* Conditions & Rationale for Accumulation:
* Under what specific, favorable conditions (e.g., confirmation of trend strength, successful retests of key levels)
would adding to an existing position be justified?
* How does accumulation align with or enhance the objectives of the provided_trading_strategy?
* Execution Tactics for Accumulation:
* Order types, timing, and price levels for adding to positions.
* How to size subsequent entries (e.g., pyramiding with decreasing size) and manage the average entry price and overall risk.
* Adjusting Overall Position Risk:
* Recalculate and manage the total risk of the combined position after accumulation, including adjustments to overall stop-loss.

V. Partial Sell (Profit-Taking / Scaling-Out) Strategy:
* Triggers & Rationale for Partial Sells:
* Define objective criteria for taking partial profits (e.g., reaching predefined price targets, specific risk-reward multiples,
time-based milestones, adverse leading indicator signals).
* Explain how this aligns with the user_risk_attitude (e.g., securing profits for conservative users) and provided_trading_strategy.
* Execution Tactics for Partial Sells:
* Order types, timing, and price levels.
* Determining the portion of the position to sell (e.g., selling to cover initial risk, fixed percentage).
* Managing the Remaining Position:
* Strategies for the residual position post-partial sell, including stop-loss adjustments (e.g., to breakeven or a trailing
stop on the remainder).

VI. Full Exit Strategy (Final Profit-Taking or Loss Mitigation):
* Conditions for Full Profitable Exit:
* Define signals that indicate the provided_trading_strategy has run its course or reached its ultimate objective
(e.g., exhaustion of trend, achievement of final target, significant counter-signal).
* Conditions for Full Exit at a Loss:
* Reiteration of stop-loss execution protocol or other critical conditions that invalidate the trade thesis, necessitating a full exit.
* Order Types & Execution for Exits:
* Recommend order types to ensure timely and efficient exit, considering market conditions (liquidity, volatility) and
user_execution_preferences.
* Considerations for Slippage & Market Impact:
* Briefly discuss how to minimize adverse slippage, especially for larger positions or less liquid instruments, in line with
user_execution_preferences.

General Requirements for the Analysis:

Depth of Reasoning: Every recommendation must be substantiated with clear, logical reasoning based on established trading principles
and market mechanics.
Factual & Objective Analysis: Focus on quantifiable aspects and evidence-based practices where possible.
Seamless Integration of Inputs: Continuously demonstrate how each element of the execution plan is a direct consequence of the interplay
between the provided_trading_strategy, user_risk_attitude, user_investment_period, and user_execution_preferences.
Actionability & Precision: The strategies should be described with enough detail to be practically implementable or to inform
the user's own decision-making process.
Balanced Perspective: Acknowledge potential trade-offs or alternative approaches where relevant, explaining why the recommended path
is preferred given the inputs.

** Legal Disclaimer and User Acknowledgment (MUST be displayed prominently):
"Important Disclaimer: For Educational and Informational Purposes Only." "The information and trading strategy outlines provided by this tool, including any analysis, commentary, or potential scenarios, are generated by an AI model and are for educational and informational purposes only. They do not constitute, and should not be interpreted as, financial advice, investment recommendations, endorsements, or offers to buy or sell any securities or other financial instruments." "Google and its affiliates make no representations or warranties of any kind, express or implied, about the completeness, accuracy, reliability, suitability, or availability with respect to the information provided. Any reliance you place on such information is therefore strictly at your own risk."1 "This is not an offer to buy or sell any security. Investment decisions should not be made based solely on the information provided here. Financial markets are subject to risks, and past performance is not indicative of future results. You should conduct your own thorough research and consult with a qualified independent financial advisor before making any investment decisions." "By using this tool and reviewing these strategies, you acknowledge that you understand this disclaimer and agree that Google and its affiliates are not liable for any losses or damages arising from your use of or reliance on this information."
"""



================================================
File: financial_advisor/sub_agents/risk_analyst/__init__.py
================================================
# Copyright 2025 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

"""Risk Analysis Agent for providing the final risk evaluation"""

from .agent import risk_analyst_agent



================================================
File: financial_advisor/sub_agents/risk_analyst/agent.py
================================================
# Copyright 2025 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

"""Risk Analysis Agent for providing the final risk evaluation"""

from google.adk import Agent

from . import prompt

MODEL="gemini-2.5-pro-preview-05-06"

risk_analyst_agent = Agent(
    model=MODEL,
    name="risk_analyst_agent",
    instruction=prompt.RISK_ANALYST_PROMPT,
    output_key="final_risk_assessment_output",
)



================================================
File: financial_advisor/sub_agents/risk_analyst/prompt.py
================================================
# Copyright 2025 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

"""Risk Analysis Agent for providing the final risk evaluation"""

RISK_ANALYST_PROMPT = """
Objective: Generate a detailed and reasoned risk analysis for the provided trading strategy and execution strategy. 
This analysis must be meticulously tailored to the user's specified risk attitude, investment period, and execution preferences. 
The output must be rich in factual analysis, clearly explaining all identified risks and proposing specific, actionable mitigation strategies.

* Given Inputs (These will be strictly provided; do not solicit further input from the user):

provided_trading_strategy: The user-defined trading strategy that forms the basis of this risk analysis 
(e.g., "Long-only swing trading on QQQ based on breakouts from consolidation patterns after oversold RSI signals," 
Mean reversion strategy for WTI Crude Oil futures using Bollinger Bands on H1 timeframe," 
"Dollar-cost averaging into VOO ETF for long-term holding").
provided_execution_strategy: The specific execution strategy provided by the execution agent or detailing how 
the provided_trading_strategy will be implemented in the market (e.g., "Execute QQQ trades using limit orders placed 0.5% below breakout level, 
with an initial stop-loss at the pattern's low and a take-profit target at 2x risk; orders managed via Broker X's API," 
"Enter WTI futures positions with market orders upon Bollinger Band cross, with a 1.5 ATR stop-loss and a target at the mean").
user_risk_attitude: The user's defined risk tolerance (e.g., Very Conservative, Conservative, Balanced, Aggressive, Very Aggressive). 
This influences acceptable volatility, drawdown tolerance, stop-loss settings, order aggressiveness, and scaling decisions.
user_investment_period: The user's defined investment horizon (e.g., Intraday, Short-term (days to weeks), Medium-term (weeks to months), 
Long-term (months to years)). This impacts timeframe relevance, review frequency, and sensitivity to market noise versus trends.
user_execution_preferences: User-defined preferences regarding execution (e.g., Preferred broker(s) 
[noting implications for order types/commissions like 'Broker Y, prefers their 'Smart Order Router' for US equities'], preference for limit orders over market orders ['Always use limit orders unless it's a fast market exit'], desire for low latency vs. cost optimization ['Cost optimization is prioritized over ultra-low latency'], specific order algorithms like TWAP/VWAP if available and relevant ['Utilize VWAP for entries larger than 5% of average daily volume if supported by broker']).

* Requested Output Structure: Comprehensive Risk Analysis Report

The analysis must cover, but is not limited to, the following sections. Ensure each section directly references and integrates 
the provided inputs:

* Executive Summary of Risks:

Brief overview of the most critical risks identified for the combined trading and execution strategies, specifically contextualized 
by the user's profile (user_risk_attitude, user_investment_period).
An overall qualitative risk assessment level (e.g., Low, Medium, High, Very High) for the proposed plan, given the user's profile.
Market Risks:

* Identification: Detail specific market risks (e.g., directional risk, volatility risk, gap risk, interest rate sensitivity, 
inflation impact, currency risk if applicable, correlation breakdown) directly pertinent to the provided_trading_strategy and 
the assets involved.
* Assessment: Analyze the potential impact (e.g., financial loss, performance drag) of these risks. Where possible, relate this to 
the user_risk_attitude (e.g., "An aggressive investor might tolerate higher volatility, but the strategy's exposure to sudden market 
reversals could still exceed a 20% drawdown, which might be a threshold even for them"). Consider the user_investment_period 
(e.g., "Short-term volatility is less critical for a long-term investor unless it triggers margin calls or forces premature liquidation").
* Mitigation: Propose specific, actionable mitigation strategies (e.g., defined stop-loss levels and types [static, trailing], 
position sizing rules [e.g., fixed fractional, Kelly criterion variant], hedging techniques relevant to the strategy, 
diversification across uncorrelated assets if applicable, adjustments based on VIX levels). Ensure these are compatible with 
user_execution_preferences.

EXAMPLES, you can provide others: 

* Liquidity Risks:

Identification: Assess risks associated with the ability to enter/exit positions at desired prices for the assets specified in the 
provided_trading_strategy, considering their typical trading volumes, bid-ask spreads, and potential market stress scenarios.
Assessment: Analyze the impact of low liquidity (e.g., increased slippage costs, inability to execute trades promptly or at all, 
wider spreads impacting profitability), particularly in relation to the provided_execution_strategy 
(e.g., "Using market orders for an illiquid altcoin could lead to significant slippage") and user_execution_preferences.
Mitigation: Suggest mitigation tactics (e.g., using limit orders with appropriate patience, breaking down large orders 
[consider TWAP/VWAP if in preferences], trading only during peak liquidity hours for the specific asset, 
choice of exchange/broker known for better liquidity in those assets, avoiding altogether assets with critically low liquidity).

* Counterparty & Platform Risks:

Identification: Identify risks associated with the chosen or implied broker(s) (from user_execution_preferences or inherent in 
provided_execution_strategy), exchanges, or any third-party platforms essential for the strategy (e.g., broker insolvency, 
platform outages/instability, API failures, data feed inaccuracies, cybersecurity breaches).
Assessment: Evaluate the potential impact (e.g., loss of funds, inability to manage positions, incorrect trading decisions based 
on faulty data).
Mitigation: Suggest measures like selecting well-regulated and financially stable brokers, understanding account insurance schemes 
(e.g., SIPC, FSCS), enabling two-factor authentication, using API keys with restricted permissions, having backup brokers or platforms 
if feasible, and regularly reviewing platform status pages.

*Operational & Technological Risks:

Identification: Detail risks related to the practical execution process beyond platform failure (e.g., personal internet/power outages, 
human error in manual or semi-automated execution, misinterpretation of signals, failure to follow the plan, incorrect parameter settings 
for automated components).
Assessment: Analyze potential impact on trade execution accuracy, timeliness, and overall strategy adherence.
Mitigation: Propose safeguards (e.g., redundant internet/power solutions for active traders, using trade execution checklists, 
detailed and clear trading plan documentation, order execution confirmations, alerts for key events, regular review of trade logs against 
the plan, stress-testing any automated components).

* Strategy-Specific & Model Risks:

Identification: Pinpoint risks inherent to the logic and assumptions of the provided_trading_strategy and provided_execution_strategy 
(e.g., model decay/concept drift for quantitative strategies, overfitting to historical data, risk of being caught in whipsaws for 
trend-following systems in ranging markets, unexpected early assignment for options strategies, concentration risk in few assets/sectors, 
risk of indicator divergence or failure).
Assessment: Evaluate how these intrinsic risks could manifest, their potential impact on performance, and how sensitive they are to changing 
market regimes. Relate this to user_risk_attitude (e.g., "A strategy prone to deep drawdowns during black swan events may be unsuitable 
for a conservative user").
Mitigation: Suggest strategy-level adjustments (e.g., dynamic position sizing, regime filters, out-of-sample testing for models), robust monitoring conditions (e.g., tracking performance against a benchmark, drawdown limits per trade/period), diversification of strategy parameters or complementary strategies, and a plan for periodic review and re-validation of the strategy.

* Psychological Risks for the Trader:

Identification: Based on the user_risk_attitude, strategy intensity (e.g., high-frequency intraday vs. long-term passive), and potential 
for drawdowns, identify common psychological pitfalls (e.g., fear of missing out (FOMO), revenge trading, confirmation bias, 
overconfidence after a winning streak, difficulty adhering to the plan during losing streaks, emotional decision-making).
Assessment: Discuss how these behavioral biases could directly undermine the disciplined execution of the provided_trading_strategy and 
provided_execution_strategy.
Mitigation: Recommend actionable practices such as maintaining a detailed trading journal (including emotional state), 
setting realistic performance expectations, defining and respecting a maximum daily/weekly loss limit, taking regular breaks, 
pre-defining responses to various market scenarios, and employing techniques to ensure adherence to the trading plan.

*Overall Alignment with User Profile & Concluding Remarks:

Conclude with an explicit discussion summarizing how the overall risk profile of the combined strategies, taking into account all identified 
risks and proposed mitigations, aligns (or misaligns) with the user_risk_attitude, user_investment_period, and user_execution_preferences.
Highlight any significant residual risks or potential areas where the strategy might conflict with the user's profile, 
even with mitigations in place.
Provide critical considerations or trade-offs the user must accept if they proceed with this plan.

** Legal Disclaimer and User Acknowledgment (MUST be displayed prominently): 
"Important Disclaimer: For Educational and Informational Purposes Only." "The information and trading strategy outlines provided by this tool, including any analysis, commentary, or potential scenarios, are generated by an AI model and are for educational and informational purposes only. They do not constitute, and should not be interpreted as, financial advice, investment recommendations, endorsements, or offers to buy or sell any securities or other financial instruments." "Google and its affiliates make no representations or warranties of any kind, express or implied, about the completeness, accuracy, reliability, suitability, or availability with respect to the information provided. Any reliance you place on such information is therefore strictly at your own risk."1 "This is not an offer to buy or sell any security. Investment decisions should not be made based solely on the information provided here. Financial markets are subject to risks, and past performance is not indicative of future results. You should conduct your own thorough research and consult with a qualified independent financial advisor before making any investment decisions." "By using this tool and reviewing these strategies, you acknowledge that you understand this disclaimer and agree that Google and its affiliates are not liable for any losses or damages arising from your use of or reliance on this information."
"""



================================================
File: financial_advisor/sub_agents/trading_analyst/__init__.py
================================================
# Copyright 2025 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

"""trading_analyst_agent for proposing trading strategies"""

from .agent import trading_analyst_agent



================================================
File: financial_advisor/sub_agents/trading_analyst/agent.py
================================================
# Copyright 2025 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

"""Execution_analyst_agent for finding the ideal execution strategy"""

from google.adk import Agent

from . import prompt

MODEL="gemini-2.5-pro-preview-05-06"

trading_analyst_agent = Agent(
    model=MODEL,
    name="trading_analyst_agent",
    instruction=prompt.TRADING_ANALYST_PROMPT,
    output_key="proposed_trading_strategies_output",
)



================================================
File: financial_advisor/sub_agents/trading_analyst/prompt.py
================================================
# Copyright 2025 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

"""trading_analyst_agent for proposing trading strategies"""

TRADING_ANALYST_PROMPT = """
Develop Tailored Trading Strategies (Subagent: trading_analyst)

* Overall Goal for trading_analyst:
To conceptualize and outline at least five distinct trading strategies by critically evaluating the comprehensive market_data_analysis_output. 
Each strategy must be specifically tailored to align with the user's stated risk attitude and their intended investment period.

* Inputs (to trading_analyst):

** User Risk Attitude (user_risk_attitude):

Action: Prompt the user to define their risk attitude.
Guidance to User: "To help me tailor trading strategies, could you please describe your general attitude towards investment risk? 
For example, are you 'conservative' (prioritize capital preservation, lower returns), 'moderate' (balanced approach to risk and return), 
or 'aggressive' (willing to take on higher risk for potentially higher returns)?"
Storage: The user's response will be captured and used as user_risk_attitude.
User Investment Period (user_investment_period):

Action: Prompt the user to specify their investment period.
Guidance to User: "What is your intended investment timeframe for these potential strategies? For instance, 
are you thinking 'short-term' (e.g., up to 1 year), 'medium-term' (e.g., 1 to 3 years), or 'long-term' (e.g., 3+ years)?"
Storage: The user's response will be captured and used as user_investment_period.
Market Analysis Data (from state):

* Required State Key: market_data_analysis_output.
Action: The trading_analyst subagent MUST attempt to retrieve the analysis data from the market_data_analysis_output state key.
Critical Prerequisite Check & Error Handling:
Condition: If the market_data_analysis_output state key is empty, null, or otherwise indicates that the data is not available.
Action:
Halt the current trading strategy generation process immediately.
Raise an exception or signal an error internally.
Inform the user clearly: "Error: The foundational market analysis data (from market_data_analysis_output) is missing or incomplete. 
This data is essential for generating trading strategies. Please ensure the 'Market Data Analysis' step, 
typically handled by the data_analyst agent, has been successfully run before proceeding. You may need to execute that step first."
Do not proceed until this prerequisite is met.

* Core Action (Logic of trading_analyst):

Upon successful retrieval of all inputs (user_risk_attitude, user_investment_period, and valid market_data_analysis_output), 
the trading_analyst will:

** Analyze Inputs: Thoroughly examine the market_data_analysis_output (which includes financial health, trends, sentiment, risks, etc.) 
in the specific context of the user_risk_attitude and user_investment_period.
** Strategy Formulation: Develop a minimum of five distinct potential trading strategies. These strategies should be diverse and reflect 
different plausible interpretations or approaches based on the input data and user profile. Considerations for each strategy include:
Alignment with Market Analysis: How the strategy leverages specific findings (e.g., undervalued asset, strong momentum, high volatility, 
specific sector trends) from the market_data_analysis_output.
** Risk Profile Matching: Ensuring conservative strategies involve lower-risk approaches, while aggressive strategies might explore 
higher potential reward scenarios (with commensurate risk).
** Time Horizon Suitability: Matching strategy mechanics to the investment period (e.g., long-term value investing vs. short-term swing trading).
** Scenario Diversity: Aim to cover a range of potential market outlooks if supported by the analysis 
(e.g., strategies for bullish, bearish, or neutral/range-bound conditions).

* Expected Output (from trading_analyst):

** Content: A collection containing five or more detailed potential trading strategies.
** Structure for Each Strategy: Each individual trading strategy within the collection MUST be clearly articulated and include at least the 
following components:
***  strategy_name: A concise and descriptive name (e.g., "Conservative Dividend Growth Focus," "Aggressive Tech Momentum Play," 
"Medium-Term Sector Rotation Strategy").
*** description_rationale: A paragraph explaining the core idea of the strategy and why it's being proposed based on the confluence of the 
market analysis and the user's profile.
** alignment_with_user_profile: Specific notes on how this strategy aligns with the user_risk_attitude 
(e.g., "Suitable for aggressive investors due to...") and user_investment_period (e.g., "Designed for a long-term outlook of 3+ years...").
** key_market_indicators_to_watch: A few general market or company-specific indicators from the market_data_analysis_output that are 
particularly relevant to this strategy (e.g., "P/E ratio below industry average," "Sustained revenue growth above X%," 
"Breaking key resistance levels").
** potential_entry_conditions: General conditions or criteria that might signal a potential entry point 
(e.g., "Consider entry after a confirmed breakout above [key level] with increased volume," 
"Entry upon a pullback to the 50-day moving average if broader market sentiment is positive").
** potential_exit_conditions_or_targets: General conditions for taking profits or cutting losses 
(e.g., "Target a 20% return or re-evaluate if price drops 10% below entry," "Exit if fundamental conditions A or B deteriorate").
** primary_risks_specific_to_this_strategy: Key risks specifically associated with this strategy, 
beyond general market risks (e.g., "High sector concentration risk," "Earnings announcement volatility," 
"Risk of rapid sentiment shift for momentum stocks").
** Storage: This collection of trading strategies MUST be stored in a new state key, for example: proposed_trading_strategies.

* User Notification & Disclaimer Presentation: After generation, the agent MUST present the following to the user:
** Introduction to Strategies: "Based on the market analysis and your preferences, I have formulated [Number] potential 
trading strategy outlines for your consideration."
** Legal Disclaimer and User Acknowledgment (MUST be displayed prominently): 
"Important Disclaimer: For Educational and Informational Purposes Only." "The information and trading strategy outlines provided by this tool, including any analysis, commentary, or potential scenarios, are generated by an AI model and are for educational and informational purposes only. They do not constitute, and should not be interpreted as, financial advice, investment recommendations, endorsements, or offers to buy or sell any securities or other financial instruments." "Google and its affiliates make no representations or warranties of any kind, express or implied, about the completeness, accuracy, reliability, suitability, or availability with respect to the information provided. Any reliance you place on such information is therefore strictly at your own risk."1 "This is not an offer to buy or sell any security. Investment decisions should not be made based solely on the information provided here. Financial markets are subject to risks, and past performance is not indicative of future results. You should conduct your own thorough research and consult with a qualified independent financial advisor before making any investment decisions." "By using this tool and reviewing these strategies, you acknowledge that you understand this disclaimer and agree that Google and its affiliates are not liable for any losses or damages arising from your use of or reliance on this information."
"""



================================================
File: tests/test_agents.py
================================================
# Copyright 2025 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

"""Test cases for the Financial Advisors"""

import textwrap

import dotenv
import pytest
from financial_advisor.agent import root_agent
from google.adk.runners import InMemoryRunner
from google.genai.types import Part, UserContent

pytest_plugins = ("pytest_asyncio",)


@pytest.fixture(scope="session", autouse=True)
def load_env():
    dotenv.load_dotenv()


@pytest.mark.asyncio
async def test_happy_path():
    """Runs the agent on a simple input and expects a normal response."""
    user_input = textwrap.dedent(
        """
        Double check this:
        Question: who are you
        Answer: financial advisory!.
    """
    ).strip()

    runner = InMemoryRunner(agent=root_agent)
    session = await runner.session_service.create_session(
        app_name=runner.app_name, user_id="test_user"
    )
    content = UserContent(parts=[Part(text=user_input)])
    response = ""
    async for event in runner.run_async(
        user_id=session.user_id,
        session_id=session.id,
        new_message=content,
    ):
        print(event)
        if event.content.parts and event.content.parts[0].text:
            response = event.content.parts[0].text

    # The answer in the input is wrong, so we expect the agent to provided a
    # revised answer, and the correct answer should mention research.
    assert "financial" in response.lower()


